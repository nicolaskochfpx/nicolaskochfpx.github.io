/* RESET */
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed, 
figure, figcaption, footer, header, hgroup, 
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
	margin: 0;
	padding: 0;
	border: 0;
	font-size: 100%;
	font: inherit;
	vertical-align: baseline;
}
/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure, 
footer, header, hgroup, menu, nav, section {
	display: block;
}
body {
	line-height: 1;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    text-rendering: optimizeLegibility;
}
blockquote, q {
	quotes: none;
}
blockquote:before, blockquote:after,
q:before, q:after {
	content: '';
	content: none;
}
table {
	border-collapse: collapse;
	border-spacing: 0;
}

/* START CSS */
/* COLORS */
:root {
   --color1: red;
   --color2: green;
   --color3: blue;
   --color4: yellow;
   --color5: magenta;
   --color6: cyan;
   --color7: white;
   --color8: black;
}

@for $i from 1 through 8 {
    /* Background */
    .background-#{$i} {
      background-color: var(--color#{$i});
    }
}

@for $i from 1 through 8 {
    /* Background */
    .color-#{$i} {
      color: var(--color#{$i});
    }
}


/* SETTINGS */
$max-width: 1500px;
$max-width-small: calc($max-width / 2);
$padding: 50px;
$font-size: 15px;

* {
    box-sizing: border-box;
}

html {
    font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
    scroll-behavior: smooth;
    line-height: 1.5em;
}

a {
    color: inherit;
    text-decoration: none;
}

img {
    width: 100%;
}

p {
    margin-bottom: calc($padding / 2);
}

ul, ol {
    padding-left: 16px;
}

hr {
    margin-bottom: calc($padding / 2);
    margin-top: calc($padding / 2);
}

.distance {
    margin-bottom: calc($padding / 2);
}

/* LAYOUT */
.normal {
    padding: $padding;
}
.boxed {
    margin: 0 auto;
    max-width: $max-width;
    padding: $padding;
}
.boxed-small {
    margin: 0 auto;
    max-width: $max-width-small;
    padding: $padding;
}
.full-width {
    width: 100%;
}

/* FLEX SETTINGS */

.flex {
    display: flex;
}

.gap {
    gap: calc($padding / 2);
}

@for $i from 1 through 12 {
    .flex-#{$i} {
      flex: $i;  
    }
  }

.flex-auto {
    flex: auto
}

.flex-direction-row {
    flex-direction: row;
    gap: $padding;
}
.flex-direction-row-reverse {
    flex-direction: row-reverse;
    gap: $padding;
}
.flex-direction-column {
    flex-direction: column;
}
.flex-direction-column-reverse {
    flex-direction: column-reverse;
}


.justify-content-flex-start {
    justify-content: flex-start;
}
.justify-content-flex-end {
    justify-content: flex-end;
}
.justify-content-center {
    justify-content: center;
}
.justify-content-space-between {
    justify-content: space-between;
}
.justify-content-space-around {
    justify-content: space-around;
}
.justify-content-space-evenly {
    justify-content: space-evenly;
}


.align-items-flex-start {
    align-items: flex-start;
}
.align-items-flex-end {
    align-items: flex-end;
}
.align-items-center {
    align-items: center;
}
.align-items-stretch {
    align-items: stretch;
}
/* GRID SETTINGS */

.grid {
    display: grid;
}

/* TEXT SETINGS */

#markdown *  {
    margin-bottom: calc($padding / 2);
    li {
        margin-bottom: 0;
    }
}

/* TEXT ALIGNMENT */
.text-align-center {
    text-align: center;
}
.text-align-left {
    text-align: left;
}
.text-align-right {
    text-align: right;
}
.text-align-justify {
    text-align: justify;
}

/* RESPONSIVE */

/* Tablet (portrait and landscape) */
@media only screen and (min-width: 601px) and (max-width: 1024px) {
    /* Styles for tablet screens */
}

/* Mobile (portrait) */
@media only screen and (max-width: 600px) {
   .boxed {
    padding: calc($padding / 2);
   }
}

